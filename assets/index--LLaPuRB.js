(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))s(r);new MutationObserver(r=>{for(const i of r)if(i.type==="childList")for(const n of i.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&s(n)}).observe(document,{childList:!0,subtree:!0});function t(r){const i={};return r.integrity&&(i.integrity=r.integrity),r.referrerPolicy&&(i.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?i.credentials="include":r.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function s(r){if(r.ep)return;r.ep=!0;const i=t(r);fetch(r.href,i)}})();class w{root;currentPath;homeDirectory;constructor(e="/home/user"){this.homeDirectory=e,this.currentPath="~",this.root=this.createInitialStructure(),this.loadFromStorage()}createInitialStructure(){const e=new Date,t={name:"",type:"directory",children:new Map,permissions:"rwxr-xr-x",created:e,modified:e,size:0},s=this.createNode("home","directory"),r=this.createNode("user","directory"),i=this.createNode("Documents","directory"),n=this.createNode("Downloads","directory"),o=this.createNode("Pictures","directory"),a=this.createNode("Videos","directory"),c=this.createNode("readme.txt","file",`Welcome to H-Terminal!
This is a virtual file system.`),h=this.createNode("script.sh","file",`#!/bin/bash
echo "Hello World!"`);return r.children.set("Documents",i),r.children.set("Downloads",n),r.children.set("Pictures",o),r.children.set("Videos",a),r.children.set("readme.txt",c),r.children.set("script.sh",h),s.children.set("user",r),t.children.set("home",s),t}createNode(e,t,s){const r=new Date;return{name:e,type:t,content:s||"",children:t==="directory"?new Map:void 0,permissions:t==="directory"?"rwxr-xr-x":"rw-r--r--",created:r,modified:r,size:s?s.length:0}}getCurrentDirectory(){return this.currentPath}setCurrentDirectory(e){const t=this.resolvePath(e),s=this.getNodeByPath(t);return!s||s.type!=="directory"?!1:(this.currentPath=this.normalizeDisplayPath(t),this.saveToStorage(),!0)}listDirectory(e){const t=e?this.resolvePath(e):this.getAbsolutePath(this.currentPath),s=this.getNodeByPath(t);return!s||s.type!=="directory"||!s.children?[]:Array.from(s.children.values()).sort((r,i)=>r.type!==i.type?r.type==="directory"?-1:1:r.name.localeCompare(i.name))}createFile(e,t=""){if(this.exists(e))return!1;const s=this.getCurrentDirectoryNode();if(!s||!s.children)return!1;const r=this.createNode(e,"file",t);return s.children.set(e,r),s.modified=new Date,this.saveToStorage(),!0}createDirectory(e){if(this.exists(e))return!1;const t=this.getCurrentDirectoryNode();if(!t||!t.children)return!1;const s=this.createNode(e,"directory");return t.children.set(e,s),t.modified=new Date,this.saveToStorage(),!0}deleteNode(e,t=!1){const s=this.getCurrentDirectoryNode();if(!s||!s.children)return!1;const r=s.children.get(e);return!r||r.type==="directory"&&r.children&&r.children.size>0&&!t?!1:(s.children.delete(e),s.modified=new Date,this.saveToStorage(),!0)}readFile(e){const t=this.getNode(e);return!t||t.type!=="file"?null:t.content||""}writeFile(e,t){const s=this.getNode(e);return s&&s.type==="file"?(s.content=t,s.size=t.length,s.modified=new Date,this.saveToStorage(),!0):this.createFile(e,t)}exists(e){return this.getNode(e)!==null}getNode(e){if(e.includes("/"))return this.getNodeByPath(this.resolvePath(e));{const t=this.getCurrentDirectoryNode();return!t||!t.children?null:t.children.get(e)||null}}resolvePath(e){if(e==="~")return this.homeDirectory;if(e.startsWith("~/"))return this.homeDirectory+e.slice(1);if(e.startsWith("/"))return e;const t=this.getAbsolutePath(this.currentPath);if(e===".")return t;if(e===".."){const s=t.split("/").filter(r=>r);return s.pop(),"/"+s.join("/")}if(e.startsWith("../")){const s=t.split("/").filter(i=>i),r=e.split("/");for(const i of r)i===".."?s.pop():i!=="."&&s.push(i);return"/"+s.join("/")}return t+(t.endsWith("/")?"":"/")+e}getAbsolutePath(e){return e==="~"?this.homeDirectory:e.startsWith("~/")?this.homeDirectory+e.slice(1):e.startsWith("/")?e:this.homeDirectory+"/"+e}getCurrentDirectoryNode(){return this.getNodeByPath(this.getAbsolutePath(this.currentPath))}getNodeByPath(e){if(e==="/")return this.root;const t=e.split("/").filter(r=>r);let s=this.root;for(const r of t){if(!s.children||!s.children.has(r))return null;s=s.children.get(r)}return s}normalizeDisplayPath(e){return e===this.homeDirectory?"~":e.startsWith(this.homeDirectory+"/")?"~"+e.slice(this.homeDirectory.length):e}saveToStorage(){try{const e={root:this.serializeNode(this.root),currentPath:this.currentPath,homeDirectory:this.homeDirectory};localStorage.setItem("h-terminal-filesystem",JSON.stringify(e))}catch(e){console.warn("Failed to save filesystem to localStorage:",e)}}loadFromStorage(){try{const e=localStorage.getItem("h-terminal-filesystem");if(e){const t=JSON.parse(e);this.root=this.deserializeNode(t.root),this.currentPath=t.currentPath||"~"}}catch(e){console.warn("Failed to load filesystem from localStorage:",e)}}serializeNode(e){const t={name:e.name,type:e.type,content:e.content,permissions:e.permissions,created:e.created.toISOString(),modified:e.modified.toISOString(),size:e.size};return e.children&&(t.children=Array.from(e.children.entries()).map(([s,r])=>[s,this.serializeNode(r)])),t}deserializeNode(e){const t={name:e.name,type:e.type,content:e.content,permissions:e.permissions,created:new Date(e.created),modified:new Date(e.modified),size:e.size};if(e.children){t.children=new Map;for(const[s,r]of e.children)t.children.set(s,this.deserializeNode(r))}return t}}class C{outputElement;inputElement;promptElement;config;constructor(e,t,s,r){this.outputElement=e,this.inputElement=t,this.promptElement=s,this.config=r,this.updatePrompt()}addOutput(e,t="output-line"){e.split(`
`).forEach(r=>{const i=document.createElement("div");i.className=t,i.textContent=r,this.outputElement.appendChild(i)}),this.scrollToBottom()}clearOutput(){this.outputElement.innerHTML=""}updatePrompt(){this.promptElement.textContent=this.config.prompt}focus(){this.inputElement.focus()}getInputValue(){return this.inputElement.value}setInputValue(e){this.inputElement.value=e}clearInput(){this.inputElement.value=""}updateConfig(e){this.config={...this.config,...e},this.updatePrompt()}scrollToBottom(){this.outputElement.scrollTop=this.outputElement.scrollHeight}}class x{history=[];currentIndex=-1;maxSize;constructor(e=1e3){this.maxSize=e,this.loadFromStorage()}add(e){e.trim()!==""&&this.history[this.history.length-1]!==e&&(this.history.push(e),this.history.length>this.maxSize&&this.history.shift(),this.currentIndex=this.history.length,this.saveToStorage())}get(e){return this.history[e]}getAll(){return[...this.history]}getPrevious(){if(this.currentIndex>0)return this.currentIndex--,this.history[this.currentIndex]}getNext(){return this.currentIndex<this.history.length-1?(this.currentIndex++,this.history[this.currentIndex]):(this.currentIndex=this.history.length,"")}clear(){this.history=[],this.currentIndex=-1,this.saveToStorage()}size(){return this.history.length}resetIndex(){this.currentIndex=this.history.length}saveToStorage(){try{localStorage.setItem("h-terminal-history",JSON.stringify(this.history))}catch(e){console.warn("Failed to save history to localStorage:",e)}}loadFromStorage(){try{const e=localStorage.getItem("h-terminal-history");e&&(this.history=JSON.parse(e),this.currentIndex=this.history.length)}catch(e){console.warn("Failed to load history from localStorage:",e)}}}class S{io;history;onCommandExecute;onTabComplete;constructor(e,t,s,r=()=>[]){this.io=e,this.history=t,this.onCommandExecute=s,this.onTabComplete=r,this.setupEventListeners()}setupEventListeners(){this.io.inputElement.addEventListener("keydown",t=>{this.handleKeyDown(t)}),document.addEventListener("click",()=>{this.io.focus()})}handleKeyDown(e){switch(e.key){case"Enter":this.handleEnter();break;case"ArrowUp":e.preventDefault(),this.handleArrowUp();break;case"ArrowDown":e.preventDefault(),this.handleArrowDown();break;case"Tab":e.preventDefault(),this.handleTab();break;case"c":e.ctrlKey&&(e.preventDefault(),this.handleCtrlC());break;case"l":e.ctrlKey&&(e.preventDefault(),this.io.clearOutput());break}}handleEnter(){const e=this.io.getInputValue();this.history.add(e),this.history.resetIndex(),this.onCommandExecute(e),this.io.clearInput()}handleArrowUp(){const e=this.history.getPrevious();e!==void 0&&this.io.setInputValue(e)}handleArrowDown(){const e=this.history.getNext();e!==void 0&&this.io.setInputValue(e)}handleTab(){const e=this.io.getInputValue(),t=this.onTabComplete(e);t.length===1?this.io.setInputValue(t[0]):t.length>1&&(this.io.addOutput("Available options:","output-line"),this.io.addOutput(t.join("  "),"output-line"))}handleCtrlC(){this.io.addOutput("^C","output-line"),this.io.clearInput()}}class v{commands=new Map;aliases=new Map;registerCommand(e){this.commands.set(e.name.toLowerCase(),e),e.aliases&&e.aliases.forEach(t=>{this.aliases.set(t.toLowerCase(),e.name.toLowerCase())})}unregisterCommand(e){const t=this.commands.get(e.toLowerCase());t&&(t.aliases&&t.aliases.forEach(s=>{this.aliases.delete(s.toLowerCase())}),this.commands.delete(e.toLowerCase()))}async executeCommand(e,t){if(!e.trim())return{success:!0,exitCode:0};const{command:s,args:r,flags:i,redirectToFile:n,redirectMode:o}=this.parseInput(e),a=this.aliases.get(s.toLowerCase())||s.toLowerCase(),c=this.commands.get(a);if(!c)return{success:!1,error:`bash: ${s}: command not found`,exitCode:127};try{const h={...t,args:r,flags:i},d=await Promise.resolve(c.execute(h));if(n&&d.success&&d.output){const m=d.output.join(`
`);return(o==="append"?this.appendToFile(t.fileSystem,n,m):this.writeToFile(t.fileSystem,n,m))?{success:!0,exitCode:0}:{success:!1,error:`bash: ${n}: cannot redirect output`,exitCode:1}}return d}catch(h){return{success:!1,error:h instanceof Error?h.message:"Unknown error occurred",exitCode:1}}}getCommand(e){const t=this.aliases.get(e.toLowerCase())||e.toLowerCase();return this.commands.get(t)}getAllCommands(){return Array.from(this.commands.values()).sort((e,t)=>e.name.localeCompare(t.name))}parseInput(e){const t=this.tokenize(e);if(t.length===0)return{command:"",args:[],flags:new Map};let s=t[0];const r=[],i=new Map;let n,o;if(s.startsWith("./")&&s.length>2){const a=s.slice(2);s="./",r.push(a);for(let c=1;c<t.length;c++)c=this.processToken(t[c],t,c,r,i,(h,d)=>{n=h,o=d});return{command:s,args:r,flags:i,redirectToFile:n,redirectMode:o}}for(let a=1;a<t.length;a++)a=this.processToken(t[a],t,a,r,i,(c,h)=>{n=c,o=h});return{command:s,args:r,flags:i,redirectToFile:n,redirectMode:o}}processToken(e,t,s,r,i,n){let o=s;if(e===">"||e===">>"){const a=e===">>"?"append":"write";return o+1<t.length&&n?(n(t[o+1],a),o+1):o}if(e.startsWith("--")){const a=e.indexOf("=");if(a>0){const c=e.substring(2,a),h=e.substring(a+1);i.set(c,h)}else{const c=e.substring(2);o+1<t.length&&!t[o+1].startsWith("-")?(i.set(c,t[o+1]),o++):i.set(c,!0)}}else if(e.startsWith("-")&&e.length>1){const a=e.substring(1);for(let c=0;c<a.length;c++){const h=a[c];c===a.length-1&&o+1<t.length&&!t[o+1].startsWith("-")?(i.set(h,t[o+1]),o++):i.set(h,!0)}}else r.push(e);return o}getCompletions(e){const{command:t,args:s}=this.parseInput(e);if(s.length===0&&!e.endsWith(" ")){const r=Array.from(this.commands.keys()).filter(i=>i.startsWith(t.toLowerCase())).concat(Array.from(this.aliases.keys()).filter(i=>i.startsWith(t.toLowerCase())));return[...new Set(r)].sort()}else{const r=this.aliases.get(t.toLowerCase())||t.toLowerCase(),i=this.commands.get(r);return i&&"getCompletions"in i?i.getCompletions(s):[]}}tokenize(e){const t=[];let s="",r=!1,i="",n=!1;for(let o=0;o<e.length;o++){const a=e[o];if(n){s+=a,n=!1;continue}if(a==="\\"){n=!0;continue}if(!r&&(a==='"'||a==="'")){r=!0,i=a;continue}if(r&&a===i){r=!1,i="";continue}if(!r&&a===" "){s&&(t.push(s),s="");continue}s+=a}return s&&t.push(s),t}writeToFile(e,t,s){try{return e.writeFile(t,s)}catch{return!1}}appendToFile(e,t,s){try{const r=e.readFile(t)||"",i=r+(r?`
`:"")+s;return e.writeFile(t,i)}catch{return!1}}}class u{aliases;success(e){return{success:!0,output:e||[],exitCode:0}}error(e,t=1){return{success:!1,error:e,exitCode:t}}validateArgs(e,t,s){return e.length<t?this.error(`${this.name}: missing arguments
Usage: ${this.usage}`):s!==void 0&&e.length>s?this.error(`${this.name}: too many arguments
Usage: ${this.usage}`):null}hasFlag(e,t){return e.has(t)&&e.get(t)===!0}getFlagValue(e,t){const s=e.get(t);return typeof s=="string"?s:null}}class D extends u{name="help";description="Show available commands and their descriptions";usage="help [command]";aliases=["?"];execute(e){const{args:t}=e;if(t.length===0){const s=["Available commands:",""];return[{name:"help",description:"Show this help message"},{name:"clear",description:"Clear the terminal screen"},{name:"pwd",description:"Print working directory"},{name:"ls",description:"List directory contents"},{name:"cd",description:"Change directory"},{name:"mkdir",description:"Create directory"},{name:"touch",description:"Create empty file"},{name:"cat",description:"Display file contents"},{name:"rm",description:"Remove files or directories"},{name:"cp",description:"Copy files or directories"},{name:"mv",description:"Move/rename files or directories"},{name:"echo",description:"Display text"},{name:"whoami",description:"Display current user"},{name:"hostname",description:"Display system hostname"},{name:"date",description:"Display current date and time"},{name:"history",description:"Show command history"}].forEach(i=>{s.push(`  ${i.name.padEnd(12)} - ${i.description}`)}),s.push(""),s.push('Type "help <command>" for detailed information about a specific command.'),this.success(s)}else{const s=t[0];return this.success([`Help for "${s}" command would be shown here`])}}}class N extends u{name="clear";description="Clear the terminal screen";usage="clear";aliases=["cls"];execute(e){return e.terminal.clearOutput(),this.success()}}class E extends u{name="echo";description="Display a line of text";usage="echo [text...]";execute(e){const{args:t}=e,s=t.join(" ");return this.success([s])}}class I extends u{name="whoami";description="Display the current username";usage="whoami";execute(e){const t=e.environment.get("USER")||"user";return this.success([t])}}class b extends u{name="hostname";description="Display the system hostname";usage="hostname";execute(e){const t=e.environment.get("HOSTNAME")||"localhost";return this.success([t])}}class P extends u{name="date";description="Display the current date and time";usage="date";execute(){const e=new Date;return this.success([e.toString()])}}class O extends u{name="history";description="Display command history";usage="history";execute(){const e=["Command history:","(History access would be implemented through dependency injection)"];return this.success(e)}}class $ extends u{name="pwd";description="Print name of current/working directory";usage="pwd";execute(e){const t=e.fileSystem.getCurrentDirectory(),s=e.fileSystem.getAbsolutePath(t);return this.success([s])}}class F extends u{name="ls";description="List directory contents";usage="ls [options] [directory]";aliases=["dir"];execute(e){const{args:t,flags:s}=e,r=this.hasFlag(s,"a")||this.hasFlag(s,"all"),i=this.hasFlag(s,"l")||this.hasFlag(s,"long"),n=t[0]||"",o=e.fileSystem.listDirectory(n);if(o.length===0)return this.success([]);const a=[];return o.forEach(c=>{if(!(!r&&c.name.startsWith(".")))if(i){const h=c.permissions,d=c.size.toString().padStart(8),m=c.modified.toLocaleDateString(),f=c.type==="directory"?"d":"-",y=c.type==="directory"?`${c.name}/`:c.name;a.push(`${f}${h} ${d} ${m} ${y}`)}else{const h=c.type==="directory"?`${c.name}/`:c.name;a.push(h)}}),i?this.success(a):this.success([a.join("  ")])}}class T extends u{name="cd";description="Change the current directory";usage="cd [directory]";execute(e){const{args:t}=e,s=t[0]||"~";return e.fileSystem.setCurrentDirectory(s)?this.success():this.error(`cd: ${s}: No such file or directory`)}}class L extends u{name="mkdir";description="Create directories";usage="mkdir [options] directory...";execute(e){const{args:t}=e,s=this.validateArgs(t,1);if(s)return s;const r=[];for(const i of t)e.fileSystem.createDirectory(i)||r.push(`mkdir: cannot create directory '${i}': File exists or invalid name`);return r.length>0?this.error(r.join(`
`)):this.success()}}class A extends u{name="touch";description="Create empty files or update file timestamps";usage="touch file...";execute(e){const{args:t}=e,s=this.validateArgs(t,1);if(s)return s;const r=[];for(const i of t)if(e.fileSystem.exists(i)){const n=e.fileSystem.getNode(i);n&&(n.modified=new Date)}else e.fileSystem.createFile(i)||r.push(`touch: cannot touch '${i}': Invalid file name`);return r.length>0?this.error(r.join(`
`)):this.success()}}class W extends u{name="cat";description="Display file contents";usage="cat file...";execute(e){const{args:t}=e,s=this.validateArgs(t,1);if(s)return s;const r=[];for(const i of t){const n=e.fileSystem.readFile(i);if(n===null)return this.error(`cat: ${i}: No such file or directory`);n&&r.push(...n.split(`
`))}return this.success(r)}}class z extends u{name="rm";description="Remove files and directories";usage="rm [options] file...";execute(e){const{args:t,flags:s}=e,r=this.validateArgs(t,1);if(r)return r;const i=this.hasFlag(s,"r")||this.hasFlag(s,"R")||this.hasFlag(s,"recursive"),n=this.hasFlag(s,"f")||this.hasFlag(s,"force"),o=[];for(const a of t){if(!e.fileSystem.exists(a)&&!n){o.push(`rm: cannot remove '${a}': No such file or directory`);continue}!e.fileSystem.deleteNode(a,i)&&!n&&o.push(`rm: cannot remove '${a}': Directory not empty (use -r to remove directories)`)}return o.length>0?this.error(o.join(`
`)):this.success()}}class g{fileSystem;environment;constructor(e,t){this.fileSystem=e,this.environment=t}async executeScript(e,t){const s=this.fileSystem.readFile(e);if(!s)return t.terminal.addOutput(`bash: ${e}: No such file or directory`,"error-line"),!1;const r=s.split(`
`).filter(i=>i.trim());if(r.length===0)return!0;if(r[0].startsWith("#!")){const i=r[0].slice(2).trim();if(!i.includes("bash")&&!i.includes("sh"))return t.terminal.addOutput(`bash: ${e}: cannot execute binary file`,"error-line"),!1}for(let i=0;i<r.length;i++){const n=r[i].trim();if(!(!n||n.startsWith("#"))&&!await this.executeScriptLine(n,t))return!1}return!0}async executeScriptLine(e,t){const s=this.parseCommand(e);if(s.length===0)return!0;const r=s[0],i=s.slice(1);switch(r){case"echo":return this.executeEcho(i,t);case"export":return this.executeExport(i,t);case"cd":return this.executeCd(i,t);case"ls":return this.executeLs(i,t);default:return t.terminal.addOutput(`bash: ${r}: command not found`,"error-line"),!1}}executeEcho(e,t){const s=e.join(" ").replace(/\$(\w+)/g,(r,i)=>this.environment.get(i)||"");return t.terminal.addOutput(s,"output-line"),!0}executeExport(e,t){for(const s of e){const[r,i]=s.split("=",2);r&&i&&this.environment.set(r,i)}return!0}executeCd(e,t){const s=e[0]||"~";return this.fileSystem.setCurrentDirectory(s)}executeLs(e,t){return this.fileSystem.listDirectory().forEach(r=>{const i=r.type==="directory"?"d":"-",n=r.permissions||"rw-r--r--",o=r.size?.toString().padStart(8)||"0",a=r.type==="directory"?`\x1B[34m${r.name}\x1B[0m`:r.name;t.terminal.addOutput(`${i}${n} ${o} ${a}`,"output-line")}),!0}parseCommand(e){const t=[];let s="",r=!1,i="";for(let n=0;n<e.length;n++){const o=e[n];(o==='"'||o==="'")&&!r?(r=!0,i=o):o===i&&r?(r=!1,i=""):o===" "&&!r?s&&(t.push(s),s=""):s+=o}return s&&t.push(s),t}}class H extends u{name="bash";description="Execute bash scripts";usage="bash <script.sh>";async execute(e){if(e.args.length===0)return{success:!1,error:"bash: usage: bash <script>",exitCode:1};const t=e.args[0];if(!e.fileSystem.exists(t))return{success:!1,error:`bash: ${t}: No such file or directory`,exitCode:1};const s=e.fileSystem.getNode(t);if(!s||s.type!=="file")return{success:!1,error:`bash: ${t}: is a directory`,exitCode:1};const i=await new g(e.fileSystem,e.environment).executeScript(t,e);return{success:i,exitCode:i?0:1}}getCompletions(e,t){return e.length===1?t.listDirectory().filter(r=>r.type==="file"&&(r.name.endsWith(".sh")||r.name.endsWith(".bash"))).map(r=>r.name):[]}}class M extends u{name="./";description="Execute script files";usage="./<script>";async execute(e){const t=e.args[0];if(!t)return{success:!1,error:"Usage: ./<script>",exitCode:1};const s=t.startsWith("./")?t.slice(2):t;if(!e.fileSystem.exists(s))return{success:!1,error:`bash: ${s}: No such file or directory`,exitCode:1};const i=await new g(e.fileSystem,e.environment).executeScript(s,e);return{success:i,exitCode:i?0:1}}}class j extends u{name="nano";description="Simple line editor for creating and editing files";usage="nano [filename]";execute(e){const{args:t,fileSystem:s}=e;if(t.length===0)return this.error("Usage: nano <filename>");const r=t[0],i=[`--- Simplified Nano Editor for ${r} ---`,"","This is a simplified version. Use these commands:",'• nano-write <filename> "content" - Write content to file','• nano-append <filename> "content" - Append content to file',"• nano-read <filename> - Show file content with line numbers","","Example:",'  nano-write myfile.txt "Hello World"','  nano-append myfile.txt "Second line"',"","Or use redirection:",'  echo "Hello World" > myfile.txt','  echo "Second line" >> myfile.txt',""];if(s.exists(r)){const n=s.readFile(r);n!==null&&(i.push("Current content:"),n.split(`
`).forEach((a,c)=>{i.push(`${(c+1).toString().padStart(3," ")}: ${a}`)}),i.push(""))}else i.push(`File "${r}" does not exist. It will be created when you write to it.`),i.push("");return this.success(i)}}class B extends u{name="nano-write";description="Write content to a file (nano helper)";usage="nano-write <filename> <content>";execute(e){const{args:t,fileSystem:s}=e;if(t.length<2)return this.error("Usage: nano-write <filename> <content>");const r=t[0],i=t.slice(1).join(" ").replace(/^["']|["']$/g,"");return s.writeFile(r,i)?this.success([`File "${r}" written successfully.`]):this.error(`Error: Could not write to file "${r}".`)}}class U extends u{name="nano-append";description="Append content to a file (nano helper)";usage="nano-append <filename> <content>";execute(e){const{args:t,fileSystem:s}=e;if(t.length<2)return this.error("Usage: nano-append <filename> <content>");const r=t[0],i=t.slice(1).join(" ").replace(/^["']|["']$/g,""),n=s.readFile(r)||"",o=n+(n?`
`:"")+i;return s.writeFile(r,o)?this.success([`Content appended to "${r}" successfully.`]):this.error(`Error: Could not append to file "${r}".`)}}class V extends u{name="nano-read";description="Show file content with line numbers (nano helper)";usage="nano-read <filename>";execute(e){const{args:t,fileSystem:s}=e;if(t.length===0)return this.error("Usage: nano-read <filename>");const r=t[0],i=s.readFile(r);if(i===null)return this.error(`nano-read: ${r}: No such file or directory`);const n=[`--- Content of ${r} ---`];return i===""?n.push("(empty file)"):i.split(`
`).forEach((a,c)=>{n.push(`${(c+1).toString().padStart(3," ")}: ${a}`)}),n.push("--- End of file ---"),this.success(n)}}class k{fileSystem;terminalIO;history;commandProcessor;config;environment;constructor(){const e=document.getElementById("terminal-output"),t=document.getElementById("terminal-input"),s=document.getElementById("prompt");if(!e||!t||!s)throw new Error("Required terminal DOM elements not found");this.config={user:"user",hostname:"localhost",homeDirectory:"/home/user",prompt:"user@localhost:~$ ",theme:"dark",maxHistorySize:1e3},this.environment=new Map([["USER",this.config.user],["HOSTNAME",this.config.hostname],["HOME",this.config.homeDirectory],["PWD",this.config.homeDirectory],["SHELL","/bin/bash"],["TERM","xterm-256color"]]),this.fileSystem=new w(this.config.homeDirectory),this.history=new x(this.config.maxHistorySize),this.terminalIO=new C(e,t,s,this.config),this.commandProcessor=new v,this.registerCommands(),new S(this.terminalIO,this.history,r=>this.executeCommand(r),r=>this.getCompletions(r)),this.showWelcome()}registerCommands(){[new D,new N,new E,new I,new b,new P,new O,new $,new F,new T,new L,new A,new W,new z,new H,new M,new j,new B,new U,new V].forEach(t=>{this.commandProcessor.registerCommand(t)})}async executeCommand(e){if(!e.trim())return;this.updatePrompt();const t=this.config.prompt;this.terminalIO.addOutput(`${t}${e}`,"command-line");try{const s={terminal:this.terminalIO,fileSystem:this.fileSystem,environment:this.environment,workingDirectory:this.fileSystem.getCurrentDirectory()},r=await this.commandProcessor.executeCommand(e,s);r.output&&r.output.length>0&&r.output.forEach(i=>{this.terminalIO.addOutput(i,"output-line")}),!r.success&&r.error&&this.terminalIO.addOutput(r.error,"error-line")}catch(s){this.terminalIO.addOutput(`Error: ${s instanceof Error?s.message:"Unknown error"}`,"error-line")}this.updateEnvironment(),this.updatePrompt()}getCompletions(e){return this.commandProcessor.getCompletions(e)}updatePrompt(){const e=this.fileSystem.getCurrentDirectory();this.config.prompt=`${this.config.user}@${this.config.hostname}:${e}$ `,this.terminalIO.updateConfig({prompt:this.config.prompt})}updateEnvironment(){const e=this.fileSystem.getCurrentDirectory(),t=this.fileSystem.getAbsolutePath(e);this.environment.set("PWD",t)}showWelcome(){this.terminalIO.addOutput("Welcome to H-Terminal","success-line"),this.terminalIO.addOutput("A modern web-based terminal emulator","success-line"),this.terminalIO.addOutput('Type "help" to see available commands',"success-line"),this.terminalIO.addOutput("","output-line"),this.updatePrompt(),this.terminalIO.focus()}start(){this.terminalIO.focus()}}function p(){try{new k().start()}catch(l){console.error("Failed to initialize terminal:",l)}}document.readyState==="loading"?document.addEventListener("DOMContentLoaded",p):p();
